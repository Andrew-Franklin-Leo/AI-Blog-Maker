name: Release Workflow

on:
  workflow_dispatch:
    inputs:
      version:
        type: string
        required: true
        description: "Version to release (e.g., 1.2.0)"
      type:
        type: choice
        required: true
        description: "Type of release"
        options:
          - release
          - hotfix
        default: "release"
  pull_request:
    types:
      - closed

permissions:
  contents: write
  pull-requests: write
  issues: write
  pages: write
  id-token: write

# Allow only one release workflow at a time
concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validate_version:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Validate version format
        run: |
          if ! [[ ${{ github.event.inputs.version }} =~ ^[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9]+)?$ ]]; then
            echo "Invalid version format. Must be in semver format (e.g., 1.2.0 or 1.2.0-beta.1)"
            exit 1
          fi

  release_workflow:
    needs: [validate_version]
    if: |
      github.event_name == 'workflow_dispatch' || 
      (github.event_name == 'pull_request' && github.event.pull_request.merged == true && 
       (startsWith(github.event.pull_request.head.ref, 'release/') || 
        startsWith(github.event.pull_request.head.ref, 'hotfix/')))
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install gh
          gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}"

      # Run dry-run for workflow_dispatch
      - uses: ./.github/actions/gitflow
        id: dry_run
        if: github.event_name == 'workflow_dispatch'
        with:
          develop_branch: "develop"
          main_branch: "main"
          version: ${{ github.event.inputs.version }}
          dry_run: 'true'

      # Generate release summary
      - id: generate_summary
        if: github.event_name == 'workflow_dispatch'
        run: |
          prs=$(gh pr list --base develop --state merged --json number,title,body --limit 100)
          
          echo "## üöÄ What's Changed" > summary.md
          echo "" >> summary.md
          
          echo "$prs" | jq -r '.[] | "### #\(.number) \(.title)\n\(.body)\n"' >> summary.md
          
          echo "release_summary<<EOF" >> $GITHUB_OUTPUT
          cat summary.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      # Run GitFlow action
      - uses: ./.github/actions/gitflow
        id: release
        with:
          develop_branch: "develop"
          main_branch: "main"
          version: ${{ github.event.inputs.version }}
          release_summary: ${{ steps.generate_summary.outputs.release_summary }}

      # Install dependencies and run checks
      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npm run typecheck

      - name: Run tests
        run: npm test

      # Build the project
      - name: Build
        if: |
          github.event_name == 'pull_request' && 
          github.event.pull_request.merged == true && 
          github.event.pull_request.base.ref == 'main'
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
          VITE_OPENROUTER_API_KEY: ${{ secrets.VITE_OPENROUTER_API_KEY }}
        run: npm run build

      # Setup and deploy to GitHub Pages
      - name: Setup Pages
        if: |
          github.event_name == 'pull_request' && 
          github.event.pull_request.merged == true && 
          github.event.pull_request.base.ref == 'main'
        uses: actions/configure-pages@v4

      - name: Upload artifact
        if: |
          github.event_name == 'pull_request' && 
          github.event.pull_request.merged == true && 
          github.event.pull_request.base.ref == 'main'
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'

      - name: Deploy to GitHub Pages
        if: |
          github.event_name == 'pull_request' && 
          github.event.pull_request.merged == true && 
          github.event.pull_request.base.ref == 'main'
        id: deployment
        uses: actions/deploy-pages@v4

      # Notify completion
      - name: Notify completion
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const conclusion = '${{ job.status }}';
            const version = '${{ github.event.inputs.version }}' || '${{ github.event.pull_request.head.ref }}'.split('/')[1];
            const type = '${{ steps.release.outputs.type }}';
            const pageUrl = '${{ steps.deployment.outputs.page_url }}';
            
            let message = '';
            if (conclusion === 'success') {
              if ('${{ github.event_name }}' === 'workflow_dispatch') {
                message = `‚úÖ ${type} PR for version ${version} created successfully!`;
              } else {
                message = `‚úÖ ${type} ${version} process completed:\n` +
                  `- Release tagged and published\n` +
                  `- Changes merged to main\n` +
                  `- Deployed to GitHub Pages: ${pageUrl || '(deployment skipped)'}\n` +
                  `- Changes merged back to develop`;
              }
            } else {
              message = `‚ùå ${type} workflow failed. Please check the logs.`;
            }
            
            try {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: message
              });
            } catch (error) {
              console.error('Failed to create comment:', error);
            }